{
	"Bootstrap Link": {
		"prefix": "link:b5",
		"body": [
			"<link href='https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css' rel='stylesheet' integrity='sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC' crossorigin='anonymous'>"
		],
		"description": "Bootstrap Link"
	},
	"Font Awesome": {
		"prefix": "link:fa5",
		"body": [
			"<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css\" integrity=\"sha512-iBBXm8fW90+nuLcSKlbmrPcLa0OT92xO1BIsZ+ywDWZCvqsWgccV3gFoRBv0z+8dLJgyAHIhR35VZc2oM/gI1w==\" crossorigin=\"anonymous\" />"
		],
		"description": "Font Awesome"
	},
	"Material Design Icon Link": {
		"prefix": "link:mdi",
		"body": [
			"  <link rel=\"stylesheet\" href=\"//cdn.materialdesignicons.com/5.4.55/css/materialdesignicons.min.css\">"
		],
		"description": "Material Design Icon Link"
	},
	"Debug Style Tag": {
		"prefix": "style:debug",
		"body": [
			"<style>",
			"  body.debug .container,",
			"  body.debug .container-fluid {",
			"    outline: 2px double blue;",
			"    outline-offset: -2px;",
			"  }",
			"",
			"  body.debug .row {",
			"    outline: 2px dashed red;",
			"    outline-offset: -2px;",
			"  }",
			"",
			"  body.debug [class*=\"col-\"] {",
			"    outline: 2px dotted forestgreen;",
			"    outline-offset: -3px;",
			"  }",
			"</style>"
		],
		"description": "Debug Style Tag"
	},
	"Axios Link": {
		"prefix": "script:axios",
		"body": [
			"<script src=\"https://cdnjs.cloudflare.com/ajax/libs/axios/0.23.0/axios.min.js\" ></script>"
		],
		"description": "Axios Link"
	},
	"Vue Template": {
		"prefix": "vt",
		"body": [
			"<template>\n\t<div class=\"${1:component}\">\n\n\n\t</div>\n</template>\n\n",
			"<script>\nexport default {\n\tsetup(){\n\t\treturn {}\n\t}\n}\n</script>\n\n",
			"<style lang=\"scss\" scoped>\n\n</style>"
		],
		"description": "A simple vue template builder"
	},
	"Try Catch with Pop and logger.error": {
		"prefix": "trycatch:poperror",
		"body": [
			"try {",
			"  ",
			"} catch (error) {",
			"  logger.error(error)",
			"  Pop.toast(error.message, 'error')",
			"}"
		]
	}
}